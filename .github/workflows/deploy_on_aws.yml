name: Deploy Nginx to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-1

    - name: Create CloudFormation stack
      run: |
        STACK_NAME="nginx-stack"
        aws cloudformation create-stack --stack-name $STACK_NAME --template-body file://cloudformation/aws_env.yml
        echo "STACK_NAME=$STACK_NAME" >> $GITHUB_ENV

    - name: Wait for CloudFormation stack to complete
      run: |
        STACK_NAME=${{ env.STACK_NAME }}
        echo "Waiting for CloudFormation stack $STACK_NAME to complete..."
        aws cloudformation wait stack-create-complete --stack-name $STACK_NAME

    - name: Get EC2 instance ID from CloudFormation stack
      run: |
        STACK_NAME=${{ env.STACK_NAME }}
        INSTANCE_ID=$(aws cloudformation describe-stacks --stack-name $STACK_NAME --query 'Stacks[0].Outputs[?OutputKey==`InstanceId`].OutputValue' --output text)
        echo "INSTANCE_ID=$INSTANCE_ID" >> $GITHUB_ENV
        echo "INSTANCE_ID=$INSTANCE_ID"
        echo "GITHUB_ENV: $GITHUB_ENV"

    - name: Wait for EC2 instance to be running
      run: |
        INSTANCE_ID=${{ env.INSTANCE_ID }}
        TIMEOUT=60  # Timeout in seconds
        INTERVAL=5   # Check interval in seconds
        ELAPSED=0
        echo "Waiting for EC2 instance $INSTANCE_ID to be running..."
        while [ $ELAPSED -lt $TIMEOUT ]; do
          STATUS=$(aws ec2 describe-instances --instance-ids $INSTANCE_ID --query 'Reservations[0].Instances[0].State.Name' --output text)
          if [ "$STATUS" == "running" ]; then
            echo "EC2 instance is running."
            break
          fi
          echo "Current status: $STATUS. Waiting..."
          sleep $INTERVAL
          ELAPSED=$((ELAPSED + INTERVAL))
        done

        if [ "$STATUS" != "running" ]; then
          echo "Timeout reached. EC2 instance is not running."
          exit 1
        fi
    
    - name: Test
      run: |
        sleep 30
        CURL_OUTPUT=$(curl -v http://$(aws cloudformation describe-stacks --stack-name nginx-stack --query 'Stacks[0].Outputs[?OutputKey==`InstancePublicDNS`].OutputValue' --output text) 2>&1)
        echo "CURL_OUTPUT: $CURL_OUTPUT"
        EXPECTED_STRING="<h1>Hello, World!</h1>"
         # Check if the expected string is in the curl output
        if echo "$CURL_OUTPUT" | grep -q "$EXPECTED_STRING"; then
          echo "Validation successful: The string '$EXPECTED_STRING' was found."
        else
          echo "Validation failed: The string '$EXPECTED_STRING' was not found."
          exit 1
        fi
    - name: Destroy AWS environment
      run: |
        STACK_NAME=${{ env.STACK_NAME }}
        aws cloudformation delete-stack --stack-name $STACK_NAME